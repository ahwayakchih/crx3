# This workflow will do a clean installation of node.js dependencies, cache/restore them,
# build the source code and run tests across different versions of node.js.
#
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: test

on:
  push:
    branches: [ "master" ]

jobs:

  simple:
    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [22.x, 23.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Workaround Windows mess and set git to keep original line endings
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - run: node --version
      - run: npm --version
      - run: npm install
      - run: npm run build --if-present

      - name: Run tests
        run: npm test
        env:
          FILE_CHECK_DELAY: 1500

      - name: Upload artifacts in case of failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-test-on-${{ matrix.os }}-with-${{ matrix.node-version }}
          path: |
            test*.zip
            test*.crx
            test*.xml

  puppeteer:
    runs-on: ubuntu-latest

    env:
      CHROME_POLICIES: /etc/opt/chrome/policies
      FILE_CHECK_DELAY: 2000
      # Enable debug to show output from test server that serves extension to browser
      # DEBUG: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - name: Show some info
        run: |
          $CHROME_BIN --version
          npm --version
          node --version

      - name: Setup policy directories
        run: |
          sudo mkdir -p ${CHROME_POLICIES}/managed
          sudo mkdir -p ${CHROME_POLICIES}/recommended
          sudo chmod -R 777 ${CHROME_POLICIES}

      - name: Install dependencies
        run: |
          npm install
          npm run puppeteer

      - name: Run tests
        run: npm test

      - name: Upload artifacts in case of failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-test-on-ubuntu-with-puppeteer
          path: |
            test*.zip
            test*.crx
            test*.xml
